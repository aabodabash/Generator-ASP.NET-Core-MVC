// ------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime : 16.0.0.0
//  
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Mobioos.Generators.AspNetCore
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Foundation.Jade.Models;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Common.Generator.Framework.Extensions;
    using Mobioos.Generators.AspNetCore;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Security\Templates\ExternalAuthController.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class ExternalAuthController : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 2 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Security\Templates\ExternalAuthController.tt"
 var model = (SmartAppInfo)Model; 
            
            #line default
            #line hidden
            this.Write("using System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\nusing ");
            
            #line 6 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Security\Templates\ExternalAuthController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Auth;\r\nusing ");
            
            #line 7 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Security\Templates\ExternalAuthController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Models;\r\nusing ");
            
            #line 8 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Security\Templates\ExternalAuthController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Helpers;\r\nusing ");
            
            #line 9 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Security\Templates\ExternalAuthController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.ViewModels;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNe" +
                    "tCore.Mvc;\r\nusing Microsoft.Extensions.Options;\r\nusing Newtonsoft.Json;\r\n\r\nnames" +
                    "pace ");
            
            #line 15 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Security\Templates\ExternalAuthController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Api\r\n{\r\n    public class ExternalAuthController : Controller\r\n    {\r\n   " +
                    "     private readonly ApplicationDbContext _appDbContext;\r\n        private reado" +
                    "nly UserManager<ApplicationUser> _userManager;\r\n        private readonly AuthSet" +
                    "tings _authSettings;\r\n        private readonly IJwtFactory _jwtFactory;\r\n       " +
                    " private readonly JwtIssuerOptions _jwtOptions;\r\n        private static readonly" +
                    " HttpClient Client = new HttpClient();\r\n\r\n        public ExternalAuthController(" +
                    "\r\n            IOptions<AuthSettings> authSettingsAccessor,\r\n            UserMana" +
                    "ger<ApplicationUser> userManager,\r\n            ApplicationDbContext appDbContext" +
                    ",\r\n            IJwtFactory jwtFactory,\r\n            IOptions<JwtIssuerOptions> j" +
                    "wtOptions)\r\n        {\r\n            _authSettings = authSettingsAccessor.Value;\r\n" +
                    "            _userManager = userManager;\r\n            _appDbContext = appDbContex" +
                    "t;\r\n            _jwtFactory = jwtFactory;\r\n            _jwtOptions = jwtOptions." +
                    "Value;\r\n        }\r\n\r\n        // POST api/externalauth/facebook\r\n        [HttpPos" +
                    "t]\r\n        public async Task<IActionResult> Facebook(\r\n            [FromBody]Fa" +
                    "cebookAuthViewModel model)\r\n        {\r\n            // 1.generate an app access t" +
                    "oken\r\n            var appAccessTokenResponse =\r\n                await Client.Get" +
                    "StringAsync(\r\n                    $\"https://graph.facebook.com/oauth/access_toke" +
                    "n?\" +\r\n                    $\"client_id={_authSettings.FacebookAppId}&\" +\r\n      " +
                    "              $\"client_secret={_authSettings.FacebookAppSecret}&\" +\r\n           " +
                    "         $\"grant_type=client_credentials\");\r\n\r\n            var appAccessToken =\r" +
                    "\n                JsonConvert.DeserializeObject<FacebookAppAccessToken>(appAccess" +
                    "TokenResponse);\r\n\r\n            // 2. validate the user access token\r\n           " +
                    " var userAccessTokenValidationResponse =\r\n                await Client.GetString" +
                    "Async(\r\n                    $\"https://graph.facebook.com/debug_token?\" +\r\n      " +
                    "              $\"input_token={model.AccessToken}&\" +\r\n                    $\"acces" +
                    "s_token={appAccessToken.AccessToken}\");\r\n\r\n            var userAccessTokenValida" +
                    "tion =\r\n                JsonConvert.DeserializeObject<FacebookUserAccessTokenVal" +
                    "idation>(\r\n                    userAccessTokenValidationResponse);\r\n\r\n          " +
                    "  if (!userAccessTokenValidation.Data.IsValid)\r\n            {\r\n                r" +
                    "eturn BadRequest(\r\n                    Errors.AddErrorToModelState(\r\n           " +
                    "             \"login_failure\",\r\n                        \"Invalid facebook token.\"" +
                    ",\r\n                        ModelState));\r\n            }\r\n\r\n            // 3. we\'" +
                    "ve got a valid token so we can request user data from fb\r\n            var userIn" +
                    "foResponse =\r\n                await Client.GetStringAsync(\r\n                    " +
                    "$\"https://graph.facebook.com/v2.8/me?\" +\r\n                    $\"fields=id,email," +
                    "first_name,last_name,\" +\r\n                    $\"name,gender,locale,birthday,pict" +
                    "ure&\" +\r\n                    $\"access_token={model.AccessToken}\");\r\n\r\n          " +
                    "  var userInfo =\r\n                JsonConvert.DeserializeObject<FacebookUserData" +
                    ">(userInfoResponse);\r\n\r\n            // 4. ready to create the local user account" +
                    " (if necessary) and jwt\r\n            var user = await _userManager.FindByEmailAs" +
                    "ync(userInfo.Email);\r\n\r\n            if (user == null)\r\n            {\r\n          " +
                    "      var appUser = new ApplicationUser\r\n                {\r\n                    " +
                    "FirstName = userInfo.FirstName,\r\n                    LastName = userInfo.LastNam" +
                    "e,\r\n                    FacebookId = userInfo.Id,\r\n                    Email = u" +
                    "serInfo.Email,\r\n                    UserName = userInfo.Email,\r\n                " +
                    "    PictureUrl = userInfo.Picture.Data.Url\r\n                };\r\n\r\n              " +
                    "  var result = await _userManager.CreateAsync(\r\n                    appUser,\r\n  " +
                    "                  Convert.ToBase64String(\r\n                        Guid\r\n       " +
                    "                     .NewGuid()\r\n                            .ToByteArray())\r\n  " +
                    "                      .Substring(\r\n                            0,\r\n             " +
                    "               8));\r\n\r\n                if (!result.Succeeded)\r\n                {" +
                    "\r\n                    return new BadRequestObjectResult(\r\n                      " +
                    "  Errors.AddErrorsToModelState(\r\n                            result,\r\n          " +
                    "                  ModelState));\r\n                }\r\n            }\r\n\r\n           " +
                    " // generate the jwt for the local user...\r\n            var localUser = await _u" +
                    "serManager.FindByNameAsync(userInfo.Email);\r\n\r\n            if (localUser == null" +
                    ")\r\n            {\r\n                return BadRequest(\r\n                    Errors" +
                    ".AddErrorToModelState(\r\n                        \"login_failure\",\r\n              " +
                    "          \"Failed to create local user account.\",\r\n                        Model" +
                    "State));\r\n            }\r\n\r\n            var jwt = await Tokens.GenerateJwt(\r\n    " +
                    "            _jwtFactory.GenerateClaimsIdentity(\r\n                    localUser.U" +
                    "serName,\r\n                    localUser.Id),\r\n                _jwtFactory,\r\n    " +
                    "            localUser.UserName,\r\n                _jwtOptions,\r\n                n" +
                    "ew JsonSerializerSettings\r\n                {\r\n                    Formatting = F" +
                    "ormatting.Indented\r\n                });\r\n\r\n            return new OkObjectResult" +
                    "(jwt);\r\n        }\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
