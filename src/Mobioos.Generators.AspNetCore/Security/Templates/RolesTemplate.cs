// ------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime : 15.0.0.0
//  
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Mobioos.Generators.AspNetCore
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Foundation.Jade.Models;
    using Mobioos.Foundation.Jade.Extensions;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Mobioos.Generators.AspNetCore;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class RolesTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            
            #line 1 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
 var model = (SmartAppInfo)Model; 
            
            #line default
            #line hidden
            this.Write("using System.Collections.Generic;\r\nusing System.Linq;\r\n\r\nnamespace ");
            
            #line 5 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(@".Backend.Security
{
    public class RoleDefinition
    {
        public RoleDefinition(string key, int value)
        {
            this.Key = key;
            this.Value = value;
        }
        public string Key { get; private set; }
        public int Value { get; private set; }
    }

    public class Roles
    {
        public const string RolesValueClaimType = ""RolesValue"";
		");
            
            #line 21 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
 if (Roles !=null) {
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 22 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
 for(int i=0;i< Roles.Count;i++) { 
            
            #line default
            #line hidden
            this.Write("\t\tpublic const string ");
            
            #line 23 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Roles[i]));
            
            #line default
            #line hidden
            this.Write("Key = \"");
            
            #line 23 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Roles[i]));
            
            #line default
            #line hidden
            this.Write("\";\r\n        public static readonly RoleDefinition ");
            
            #line 24 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Roles[i]));
            
            #line default
            #line hidden
            this.Write(" = new RoleDefinition(");
            
            #line 24 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Roles[i]));
            
            #line default
            #line hidden
            this.Write("Key, ");
            
            #line 24 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i+6));
            
            #line default
            #line hidden
            this.Write("^2);\r\n\t\t");
            
            #line 25 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
}
		}
		
            
            #line default
            #line hidden
            this.Write(@"
		public class BuiltinRoles
		{
			public const string DataEditorKey = ""DataEditor"";
			public const string AdminKey = ""Admin"";
			public const string UserKey = ""User"";

			public static readonly RoleDefinition Admin = new RoleDefinition(AdminKey, 1);
			public static readonly RoleDefinition User = new RoleDefinition(UserKey, 2);
			public static readonly RoleDefinition DataEditor = new RoleDefinition(DataEditorKey, 4);

			public static IEnumerable<RoleDefinition> GetAll()
			{
				yield return BuiltinRoles.Admin;
				yield return BuiltinRoles.User;
				yield return BuiltinRoles.DataEditor;
			}
	    }

        public static IEnumerable<RoleDefinition> GetAll()
        {
            foreach (var builtInRole in Roles.BuiltinRoles.GetAll())
                yield return builtInRole;

			");
            
            #line 52 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
 if (Roles!=null && Roles.Count>0) {
				for(int i=0;i< Roles.Count;i++){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\tyield return Roles.");
            
            #line 54 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Roles[i]));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t");
            
            #line 55 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Security\Templates\RolesTemplate.tt"
}
			}
            
            #line default
            #line hidden
            this.Write(@"            
        }

        public static int GetRolesValue(IEnumerable<string> roleNames)
        {
            return Roles.GetAll()
                 .Where(role => roleNames.Any(r => r.Equals(role.Key, System.StringComparison.OrdinalIgnoreCase)))
                 .Select(r => r.Value)
                 .Sum();
    }
}
}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
