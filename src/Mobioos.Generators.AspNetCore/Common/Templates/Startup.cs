// ------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime : 16.0.0.0
//  
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Mobioos.Generators.AspNetCore
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Foundation.Jade.Models;
    using Mobioos.Scaffold.BaseGenerators.TextTemplating;
    using Common.Generator.Framework.Extensions;
    using Mobioos.Generators.AspNetCore;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class Startup : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 2 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"

    var model = (SmartAppInfo)Model;
    var models = model.GetModels();

            
            #line default
            #line hidden
            this.Write(@"using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using Swashbuckle.AspNetCore.Swagger;
using ");
            
            #line 17 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Models;\r\nusing ");
            
            #line 18 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Services;\r\nusing ");
            
            #line 19 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Infrastructure.Services;\r\nusing ");
            
            #line 20 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Repositories;\r\n\r\nnamespace ");
            
            #line 22 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend\r\n{\r\n    public partial class Startup\r\n    {\r\n        public Startup(IHos" +
                    "tingEnvironment env)\r\n        {\r\n            var builder = new ConfigurationBuil" +
                    "der()\r\n                .SetBasePath(env.ContentRootPath)\r\n                .AddJs" +
                    "onFile(\r\n                    \"appsettings.json\",\r\n                    optional: " +
                    "false,\r\n                    reloadOnChange: true)\r\n                .AddJsonFile(" +
                    "\r\n                    $\"appsettings.{env.EnvironmentName}.json\",\r\n              " +
                    "      optional: true);\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n " +
                    "               // For more details on using the user secret store\r\n             " +
                    "   // see https://go.microsoft.com/fwlink/?LinkID=532709\r\n                builde" +
                    "r.AddUserSecrets<Startup>();\r\n            }\r\n\r\n            builder.AddEnvironmen" +
                    "tVariables();\r\n            Configuration = builder.Build();\r\n        }\r\n\r\n      " +
                    "  public IConfiguration Configuration { get; }\r\n\r\n        // This method gets ca" +
                    "lled by the runtime. Use this method to add services to the container.\r\n        " +
                    "public void ConfigureServices(IServiceCollection services)\r\n        {\r\n         " +
                    "   // Add framework services.\r\n            services.AddDbContext<ApplicationDbCo" +
                    "ntext>(options =>\r\n                options.UseSqlServer(Configuration.GetConnect" +
                    "ionString(\"DefaultConnection\")));\r\n\r\n            services.AddCors(options =>\r\n  " +
                    "          {\r\n                options.AddPolicy(\"SiteCorsPolicy\",\r\n              " +
                    "  builder => builder.AllowAnyOrigin()\r\n                    .AllowAnyMethod()\r\n  " +
                    "                  .AllowAnyHeader()\r\n                    .AllowCredentials());\r\n" +
                    "            });\r\n\r\n            //Configure authentication services.\r\n           " +
                    " ConfigureAuth(services);\r\n\r\n            services.AddMvc();\r\n\r\n            // Ad" +
                    "d application services.\r\n            services.AddTransient<IEmailSender, AuthMes" +
                    "sageSender>();\r\n            services.AddTransient<ISmsSender, AuthMessageSender>" +
                    "();\r\n            services.AddScoped(typeof(IRepository<>), typeof(Repository<>))" +
                    ";\r\n\r\n");
            
            #line 77 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"

    if (models != null
        && models.FirstOrDefault(e =>
            !e.IsAbstract
            && !e.IsEnum
            && !e.IsInherited(models)) != null)
    {
        foreach (var entity in models.Where(e =>
            !e.IsAbstract
            && !e.IsEnum
            && !e.IsInherited(models)))
        {

            
            #line default
            #line hidden
            this.Write("            services.AddScoped<I");
            
            #line 90 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Id));
            
            #line default
            #line hidden
            this.Write("Repository, ");
            
            #line 90 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Id));
            
            #line default
            #line hidden
            this.Write("Repository>();\r\n");
            
            #line 91 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"

        }

        foreach (var entity in models.Where(e =>
            !e.IsAbstract
            && !e.IsEnum
            && !e.IsInherited(models)))
        {

            
            #line default
            #line hidden
            this.Write("            services.AddScoped<I");
            
            #line 100 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Id));
            
            #line default
            #line hidden
            this.Write("Service, ");
            
            #line 100 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entity.Id));
            
            #line default
            #line hidden
            this.Write("Service>();\r\n");
            
            #line 101 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"

        }
    }

            
            #line default
            #line hidden
            this.Write(@"
             // Register the Swagger generator, defining one or more Swagger documents
            services.AddSwaggerGen(c =>
            {
                c.SwaggerDoc(
                    ""v1"",
                    new Info
                    {
                        Title = """);
            
            #line 113 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(" API\",\r\n                        Version = \"v1\"\r\n                    });\r\n        " +
                    "    });\r\n        }\r\n\r\n        // This method gets called by the runtime.\r\n      " +
                    "  // Use this method to configure the HTTP request pipeline.\r\n        public voi" +
                    "d Configure(\r\n            IApplicationBuilder app,\r\n            IHostingEnvironm" +
                    "ent env,\r\n            ILoggerFactory loggerFactory)\r\n        {\r\n            logg" +
                    "erFactory.AddConsole(Configuration.GetSection(\"Logging\"));\r\n            loggerFa" +
                    "ctory.AddDebug();\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n      " +
                    "          app.UseDeveloperExceptionPage();\r\n                app.UseDatabaseError" +
                    "Page();\r\n                app.UseBrowserLink();\r\n            }\r\n            else\r" +
                    "\n            {\r\n                app.UseExceptionHandler(\"/GeneratorHome/Error\");" +
                    "\r\n            }\r\n\r\n            app.UseCors(\"SiteCorsPolicy\");\r\n\r\n            app" +
                    ".UseStaticFiles();\r\n\r\n            ConfigureAuth(app);\r\n\r\n            app.UseMvc(" +
                    "routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    " +
                    "name: \"default\",\r\n                    template: \"{controller=GeneratorHome}/{act" +
                    "ion=Index}/{id?}\");\r\n            });\r\n\r\n             // Enable middleware to ser" +
                    "ve generated Swagger as a JSON endpoint.\r\n            app.UseSwagger();\r\n\r\n     " +
                    "       // Enable middleware to serve swagger-ui (HTML, JS, CSS etc.),\r\n         " +
                    "   // specifying the Swagger JSON endpoint.\r\n            app.UseSwaggerUI(c =>\r\n" +
                    "            {\r\n                c.SwaggerEndpoint(\r\n                    \"/swagger" +
                    "/v1/swagger.json\",\r\n                    \"");
            
            #line 162 "C:\Users\PC\Documents\Gits\ASP.NET-Core-MVC\src\Mobioos.Generators.AspNetCore\Common\Templates\Startup.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(" API V1\");\r\n            });\r\n        }\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
