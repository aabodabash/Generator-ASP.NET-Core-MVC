// ------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime : 15.0.0.0
//  
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Mobioos.Generators.AspNetCore
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Foundation.Jade.Models;
    using Mobioos.Foundation.Jade.Extensions;
    using Mobioos.Scaffold.TextTemplating;
    using Mobioos.Generators.AspNetCore;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\DEV\Generators\Mobioos\Security\Templates\ExternalAuthController.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class ExternalAuthController : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            
            #line 1 "D:\DEV\Generators\Mobioos\Security\Templates\ExternalAuthController.tt"
 var model = (SmartAppInfo)Model; 
            
            #line default
            #line hidden
            this.Write("using System;\r\nusing System.Net.Http;\r\nusing System.Threading.Tasks;\r\nusing ");
            
            #line 5 "D:\DEV\Generators\Mobioos\Security\Templates\ExternalAuthController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Auth;\r\nusing ");
            
            #line 6 "D:\DEV\Generators\Mobioos\Security\Templates\ExternalAuthController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Models;\r\nusing ");
            
            #line 7 "D:\DEV\Generators\Mobioos\Security\Templates\ExternalAuthController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Helpers;\r\nusing ");
            
            #line 8 "D:\DEV\Generators\Mobioos\Security\Templates\ExternalAuthController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.ViewModels;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNe" +
                    "tCore.Mvc;\r\nusing Microsoft.Extensions.Options;\r\nusing Newtonsoft.Json;\r\n\r\nnames" +
                    "pace ");
            
            #line 14 "D:\DEV\Generators\Mobioos\Security\Templates\ExternalAuthController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Api\r\n{\r\n\t[Route(\"api/[controller]/[action]\")]\r\n\r\n  public class External" +
                    "AuthController : Controller\r\n  {\r\n    private readonly ApplicationDbContext _app" +
                    "DbContext;\r\n    private readonly UserManager<ApplicationUser> _userManager;\r\n   " +
                    " private readonly AuthSettings _authSettings;\r\n    private readonly IJwtFactory " +
                    "_jwtFactory;\r\n    private readonly JwtIssuerOptions _jwtOptions;\r\n    private st" +
                    "atic readonly HttpClient Client = new HttpClient();\r\n\r\n    public ExternalAuthCo" +
                    "ntroller(IOptions<AuthSettings> authSettingsAccessor, UserManager<ApplicationUse" +
                    "r> userManager, ApplicationDbContext appDbContext, IJwtFactory jwtFactory, IOpti" +
                    "ons<JwtIssuerOptions> jwtOptions)\r\n    {\r\n      _authSettings = authSettingsAcce" +
                    "ssor.Value;\r\n      _userManager = userManager;\r\n      _appDbContext = appDbConte" +
                    "xt;\r\n      _jwtFactory = jwtFactory;\r\n      _jwtOptions = jwtOptions.Value;\r\n   " +
                    " }\r\n\r\n    // POST api/externalauth/facebook\r\n    [HttpPost]\r\n    public async Ta" +
                    "sk<IActionResult> Facebook([FromBody]FacebookAuthViewModel model)\r\n    {\r\n      " +
                    "// 1.generate an app access token\r\n      var appAccessTokenResponse = await Clie" +
                    "nt.GetStringAsync($\"https://graph.facebook.com/oauth/access_token?client_id={_au" +
                    "thSettings.FacebookAppId}&client_secret={_authSettings.FacebookAppSecret}&grant_" +
                    "type=client_credentials\");\r\n      var appAccessToken = JsonConvert.DeserializeOb" +
                    "ject<FacebookAppAccessToken>(appAccessTokenResponse);\r\n\r\n      // 2. validate th" +
                    "e user access token\r\n      var userAccessTokenValidationResponse = await Client." +
                    "GetStringAsync($\"https://graph.facebook.com/debug_token?input_token={model.Acces" +
                    "sToken}&access_token={appAccessToken.AccessToken}\");\r\n      var userAccessTokenV" +
                    "alidation = JsonConvert.DeserializeObject<FacebookUserAccessTokenValidation>(use" +
                    "rAccessTokenValidationResponse);\r\n\r\n      if (!userAccessTokenValidation.Data.Is" +
                    "Valid)\r\n      {\r\n        return BadRequest(Errors.AddErrorToModelState(\"login_fa" +
                    "ilure\", \"Invalid facebook token.\", ModelState));\r\n      }\r\n\r\n      // 3. we\'ve g" +
                    "ot a valid token so we can request user data from fb\r\n      var userInfoResponse" +
                    " = await Client.GetStringAsync($\"https://graph.facebook.com/v2.8/me?fields=id,em" +
                    "ail,first_name,last_name,name,gender,locale,birthday,picture&access_token={model" +
                    ".AccessToken}\");\r\n      var userInfo = JsonConvert.DeserializeObject<FacebookUse" +
                    "rData>(userInfoResponse);\r\n\r\n      // 4. ready to create the local user account " +
                    "(if necessary) and jwt\r\n      var user = await _userManager.FindByEmailAsync(use" +
                    "rInfo.Email);\r\n\r\n      if (user == null)\r\n      {\r\n        var appUser = new App" +
                    "licationUser\r\n        {\r\n          FirstName = userInfo.FirstName,\r\n          La" +
                    "stName = userInfo.LastName,\r\n          FacebookId = userInfo.Id,\r\n          Emai" +
                    "l = userInfo.Email,\r\n          UserName = userInfo.Email,\r\n          PictureUrl " +
                    "= userInfo.Picture.Data.Url\r\n        };\r\n\r\n        var result = await _userManag" +
                    "er.CreateAsync(appUser, Convert.ToBase64String(Guid.NewGuid().ToByteArray()).Sub" +
                    "string(0, 8));\r\n\r\n        if (!result.Succeeded) return new BadRequestObjectResu" +
                    "lt(Errors.AddErrorsToModelState(result, ModelState));\r\n      }\r\n\r\n      // gener" +
                    "ate the jwt for the local user...\r\n      var localUser = await _userManager.Find" +
                    "ByNameAsync(userInfo.Email);\r\n\r\n      if (localUser==null)\r\n      {\r\n        ret" +
                    "urn BadRequest(Errors.AddErrorToModelState(\"login_failure\", \"Failed to create lo" +
                    "cal user account.\", ModelState));\r\n      }\r\n\r\n      var jwt = await Tokens.Gener" +
                    "ateJwt(_jwtFactory.GenerateClaimsIdentity(localUser.UserName, localUser.Id),\r\n  " +
                    "      _jwtFactory, localUser.UserName, _jwtOptions, new JsonSerializerSettings {" +
                    "Formatting = Formatting.Indented});\r\n\r\n      return new OkObjectResult(jwt);\r\n  " +
                    "  }\r\n  }\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
