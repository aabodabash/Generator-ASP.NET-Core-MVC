// ------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime : 15.0.0.0
//  
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Mobioos.Generators.AspNetCore
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Foundation.Jade.Models;
    using Mobioos.Foundation.Jade.Extensions;
    using Mobioos.Scaffold.TextTemplating;
    using Mobioos.Generators.AspNetCore;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\DEV\Generators\Mobioos\Common\Templates\Models\ManageViewModels.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class ManageViewModels : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            
            #line 1 "D:\DEV\Generators\Mobioos\Common\Templates\Models\ManageViewModels.tt"
 var model = (SmartAppInfo)Model; 
            
            #line default
            #line hidden
            this.Write(@"using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authentication;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Mvc.Rendering;

namespace ");
            
            #line 11 "D:\DEV\Generators\Mobioos\Common\Templates\Models\ManageViewModels.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Models\r\n{\r\n\tpublic class AddPhoneNumberViewModel\r\n    {\r\n        [Requir" +
                    "ed]\r\n        [Phone]\r\n        [Display(Name = \"Phone number\")]\r\n        public s" +
                    "tring PhoneNumber { get; set; }\r\n    }\r\n\r\n\tpublic class ChangePasswordViewModel\r" +
                    "\n    {\r\n        [Required]\r\n        [DataType(DataType.Password)]\r\n        [Disp" +
                    "lay(Name = \"Current password\")]\r\n        public string OldPassword { get; set; }" +
                    "\r\n\r\n        [Required]\r\n        [StringLength(100, ErrorMessage = \"The {0} must " +
                    "be at least {2} and at max {1} characters long.\", MinimumLength = 6)]\r\n        [" +
                    "DataType(DataType.Password)]\r\n        [Display(Name = \"New password\")]\r\n        " +
                    "public string NewPassword { get; set; }\r\n\r\n        [DataType(DataType.Password)]" +
                    "\r\n        [Display(Name = \"Confirm new password\")]\r\n        [Compare(\"NewPasswor" +
                    "d\", ErrorMessage = \"The new password and confirmation password do not match.\")]\r" +
                    "\n        public string ConfirmPassword { get; set; }\r\n    }\r\n\r\n\tpublic class Con" +
                    "figureTwoFactorViewModel\r\n    {\r\n        public string SelectedProvider { get; s" +
                    "et; }\r\n\r\n        public ICollection<SelectListItem> Providers { get; set; }\r\n   " +
                    " }\r\n\r\n\tpublic class FactorViewModel\r\n    {\r\n        public string Purpose { get;" +
                    " set; }\r\n    }\r\n\r\n\tpublic class IndexViewModel\r\n    {\r\n        public bool HasPa" +
                    "ssword { get; set; }\r\n\r\n        public IList<UserLoginInfo> Logins { get; set; }" +
                    "\r\n\r\n        public string PhoneNumber { get; set; }\r\n\r\n        public bool TwoFa" +
                    "ctor { get; set; }\r\n\r\n        public bool BrowserRemembered { get; set; }\r\n    }" +
                    "\r\n\r\n\tpublic class ManageLoginsViewModel\r\n    {\r\n        public IList<UserLoginIn" +
                    "fo> CurrentLogins { get; set; }\r\n\r\n        public IList<AuthenticationScheme> Ot" +
                    "herLogins { get; set; }\r\n    }\r\n\r\n\tpublic class RemoveLoginViewModel\r\n    {\r\n   " +
                    "     public string LoginProvider { get; set; }\r\n        public string ProviderKe" +
                    "y { get; set; }\r\n    }\r\n\r\n\tpublic class SetPasswordViewModel\r\n    {\r\n        [Re" +
                    "quired]\r\n        [StringLength(100, ErrorMessage = \"The {0} must be at least {2}" +
                    " and at max {1} characters long.\", MinimumLength = 6)]\r\n        [DataType(DataTy" +
                    "pe.Password)]\r\n        [Display(Name = \"New password\")]\r\n        public string N" +
                    "ewPassword { get; set; }\r\n\r\n        [DataType(DataType.Password)]\r\n        [Disp" +
                    "lay(Name = \"Confirm new password\")]\r\n        [Compare(\"NewPassword\", ErrorMessag" +
                    "e = \"The new password and confirmation password do not match.\")]\r\n        public" +
                    " string ConfirmPassword { get; set; }\r\n    }\r\n\r\n\tpublic class VerifyPhoneNumberV" +
                    "iewModel\r\n    {\r\n        [Required]\r\n        public string Code { get; set; }\r\n\r" +
                    "\n        [Required]\r\n        [Phone]\r\n        [Display(Name = \"Phone number\")]\r\n" +
                    "        public string PhoneNumber { get; set; }\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
