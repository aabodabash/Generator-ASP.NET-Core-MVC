// ------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime : 15.0.0.0
//  
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Mobioos.Generators.AspNetCore
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Mobioos.Foundation.Jade.Models;
    using Mobioos.Foundation.Jade.Extensions;
    using Mobioos.Scaffold.TextTemplating;
    using Mobioos.Generators.AspNetCore;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\DEV\Generators\Mobioos\Common\Templates\Models\AccountViewModels.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class AccountViewModels : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            
            #line 1 "D:\DEV\Generators\Mobioos\Common\Templates\Models\AccountViewModels.tt"
 var model = (SmartAppInfo)Model; 
            
            #line default
            #line hidden
            this.Write("using System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel.Dat" +
                    "aAnnotations;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsof" +
                    "t.AspNetCore.Mvc.Rendering;\r\n\r\nnamespace ");
            
            #line 9 "D:\DEV\Generators\Mobioos\Common\Templates\Models\AccountViewModels.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Id));
            
            #line default
            #line hidden
            this.Write(".Backend.Models\r\n{\r\n\tpublic class ExternalLoginConfirmationViewModel\r\n    {\r\n    " +
                    "    [Required]\r\n        [EmailAddress]\r\n        public string Email { get; set; " +
                    "}\r\n    }\r\n\r\n\tpublic class ExternalLoginListViewModel\r\n    {\r\n        public stri" +
                    "ng ReturnUrl { get; set; }\r\n    }\r\n\r\n\tpublic class ForgotPasswordViewModel\r\n    " +
                    "{\r\n        [Required]\r\n        [EmailAddress]\r\n        public string Email { get" +
                    "; set; }\r\n    }\r\n\r\n\tpublic class LoginViewModel\r\n    {\r\n        [Required]\r\n    " +
                    "    [EmailAddress]\r\n        public string Email { get; set; }\r\n\r\n        [Requir" +
                    "ed]\r\n        [DataType(DataType.Password)]\r\n        public string Password { get" +
                    "; set; }\r\n\r\n        [Display(Name = \"Remember me?\")]\r\n        public bool Rememb" +
                    "erMe { get; set; }\r\n    }\r\n\r\n\tpublic class RegisterViewModel\r\n    {\r\n        [Re" +
                    "quired]\r\n        [EmailAddress]\r\n        [Display(Name = \"Email\")]\r\n        publ" +
                    "ic string Email { get; set; }\r\n\r\n        [Required]\r\n        [StringLength(100, " +
                    "ErrorMessage = \"The {0} must be at least {2} and at max {1} characters long.\", M" +
                    "inimumLength = 6)]\r\n        [DataType(DataType.Password)]\r\n        [Display(Name" +
                    " = \"Password\")]\r\n        public string Password { get; set; }\r\n\r\n        [DataTy" +
                    "pe(DataType.Password)]\r\n        [Display(Name = \"Confirm password\")]\r\n        [C" +
                    "ompare(\"Password\", ErrorMessage = \"The password and confirmation password do not" +
                    " match.\")]\r\n        public string ConfirmPassword { get; set; }\r\n    }\r\n\r\n\tpubli" +
                    "c class ResetPasswordViewModel\r\n    {\r\n        [Required]\r\n        [EmailAddress" +
                    "]\r\n        public string Email { get; set; }\r\n\r\n        [Required]\r\n        [Str" +
                    "ingLength(100, ErrorMessage = \"The {0} must be at least {2} and at max {1} chara" +
                    "cters long.\", MinimumLength = 6)]\r\n        [DataType(DataType.Password)]\r\n      " +
                    "  public string Password { get; set; }\r\n\r\n        [DataType(DataType.Password)]\r" +
                    "\n        [Display(Name = \"Confirm password\")]\r\n        [Compare(\"Password\", Erro" +
                    "rMessage = \"The password and confirmation password do not match.\")]\r\n        pub" +
                    "lic string ConfirmPassword { get; set; }\r\n\r\n        public string Code { get; se" +
                    "t; }\r\n    }\r\n\r\n\tpublic class SendCodeViewModel\r\n    {\r\n        public string Sel" +
                    "ectedProvider { get; set; }\r\n\r\n        public ICollection<SelectListItem> Provid" +
                    "ers { get; set; }\r\n\r\n        public string ReturnUrl { get; set; }\r\n\r\n        pu" +
                    "blic bool RememberMe { get; set; }\r\n    }\r\n\r\n\tpublic class VerifyCodeViewModel\r\n" +
                    "    {\r\n        [Required]\r\n        public string Provider { get; set; }\r\n\r\n     " +
                    "   [Required]\r\n        public string Code { get; set; }\r\n\r\n        public string" +
                    " ReturnUrl { get; set; }\r\n\r\n        [Display(Name = \"Remember this browser?\")]\r\n" +
                    "        public bool RememberBrowser { get; set; }\r\n\r\n        [Display(Name = \"Re" +
                    "member me?\")]\r\n        public bool RememberMe { get; set; }\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
